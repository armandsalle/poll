datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ROLE {
  ADMIN
  USER
}

model UserRegistration {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  code      String
  valid     Boolean  @default(false)
}

model NewPasswordRequest {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  token     String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model User {
  id                  String               @id @default(cuid())
  email               String               @unique
  name                String
  role                ROLE                 @default(USER)
  password            Password?
  sessions            Session[]
  newPasswordRequests NewPasswordRequest[]

  confirmToken     String?
  confirmedEmail   Boolean  @default(false)
  confirmedEmailAt DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  polls Poll[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Session {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String
  expirationDate DateTime
}

model Poll {
  id      String  @id @default(cuid())
  title   String
  body    String
  publish Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  answers Answer[]
}

model Answer {
  id    String @id @default(cuid())
  title String
  count Int

  poll   Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pollId String
}
